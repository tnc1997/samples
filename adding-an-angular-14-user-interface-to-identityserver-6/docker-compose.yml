services:
  db:
    environment:
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    image: postgres:14
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
  identityserver:
    build:
      context: .
      dockerfile: ./IdentityServer/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    entrypoint: /bin/sh -c "update-ca-certificates && dotnet IdentityServer.dll"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:7000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - CONNECTIONSTRINGS__IDENTITY=Server=db;Port=5432;Database=identity;User Id=postgres;Password=password;
      - CONNECTIONSTRINGS__IDENTITYSERVER=Server=db;Port=5432;Database=identityserver;User Id=postgres;Password=password;
    ports:
      - "7000:7000"
    volumes:
      - ./localhost.pfx:/https/localhost.pfx:ro
      - ./localhost.crt:/usr/local/share/ca-certificates/localhost.crt:ro
  webapplication:
    build:
      context: .
      dockerfile: ./WebApplication/Dockerfile
    depends_on:
      identityserver:
        condition: service_started
    entrypoint: /bin/sh -c "update-ca-certificates && dotnet WebApplication.dll"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:7002
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - AUTHENTICATION__AUTHORITY=https://identityserver:7000
      - AUTHENTICATION__CLIENTID=4ecc4153-daf9-4eca-8b60-818a63637a81
      - AUTHENTICATION__CLIENTSECRET=secret
    ports:
      - "7002:7002"
    volumes:
      - ./localhost.pfx:/https/localhost.pfx:ro
      - ./localhost.crt:/usr/local/share/ca-certificates/localhost.crt:ro
volumes:
  db:
